continue
file
continue
file
continue
file
continue
file.class
file
continue
file[:body]
file
file.class
continue
ActionDispatch::Http::UploadFile.create!
ActionDispatch::Http::UploadFile.new csv
continue
params['file']
continue
csv.read
csv.basename.to_s
csv.basename
csv.pathname
csv.class
csv.name
csv.filename
csv.pathname
csv.read
csv
csv.class
continue
file[:name]
"#{File.extname(file[:name])[1..-1].capitalize}Formatter"
extension = "#{File.extname(file[:name])[1..-1].capitalize}Formatter"
file
continue
"#{File.extname(file[:name])[1..-1].capitalize}Formatter"
file
continue
File.extname(file[:name])[1..-1].capitalize
file[:name]
continue
shipping_category
hash
continue
Spree::ShippingCategory.count
a.save!
a.valid?
a = Spree::Product.new hashes_array[0]
a = Product.new hashes_array[0]
hashes_array[0]
hashes_array
hashed_file
continue
product.save!
product.saved?
product
continue
Spree::Product.count
continue
product1
continue
file[:body]
file
continue
e.message
e
continue
Spree::Product.count
continue
Spree::Product.count
continue
Spree::Product.count
continue
Spree::Product.count
e
continue
Spree::Product.count
continue
e
continue
hashes_array[-1]
hashes_array[0]
continue
Spree::Product.count
continue
p
Spree::Product.count
continue
Spree::Product.count
p
continue
hashed_rows
continue
file
row
continue
